{
	"compilerOptions": {
		"target": "ES2020",
		// Specifies the version of JavaScript to output. ES2020 ensures modern JavaScript features are used.

		"useDefineForClassFields": true,
		// Uses ECMAScript-defined behavior for class field declarations, which aligns with the latest JavaScript class field syntax.

		/* Adjust for Node.js */
		"module": "CommonJS",
		// Specifies the module system to be used. In this case, CommonJS is used, which is the default in Node.js environments.

		"lib": ["ES2020"],
		// Specifies the library files to include in the compilation. ES2020 includes modern JavaScript features. No need for DOM libraries in a Node.js environment.

		"moduleResolution": "node",
		// Specifies how modules are resolved. "node" resolution mimics Node.js, which is required for backend development.

		"noEmit": true,
		// Prevents the TypeScript compiler from generating output files (e.g., JavaScript). This is useful when you're using `ts-node` to execute TypeScript directly.

		"moduleDetection": "auto",
		// Automatically detects whether a file should be treated as an ES module or CommonJS based on the presence of `import` or `require` statements.

		/* Interop Constraints */
		"esModuleInterop": true,
		// Enables interoperability between CommonJS and ES module systems, allowing you to use default imports with CommonJS modules.

		"allowSyntheticDefaultImports": true,
		// Allows default imports from modules that don't have a default export, commonly used when importing CommonJS modules in ES module syntax.

		/* Linting and Type Checking */
		"strict": true,
		// Enables all strict type-checking options in TypeScript, which enforces stricter rules to catch potential errors.

		"noUnusedLocals": true,
		// Ensures that TypeScript reports errors for variables declared but not used in the code, helping keep code clean.

		"noUnusedParameters": true,
		// Ensures that TypeScript reports errors for function parameters that are declared but not used, improving code clarity.

		"noFallthroughCasesInSwitch": true
		// Ensures that TypeScript reports errors for switch statements where a case block falls through to the next one without a break, preventing potential logic errors.
	},
	"include": ["./src"],
	// Specifies which files or directories to include in the compilation. Here, it includes all TypeScript files in the `src` directory.

	"exclude": ["node_modules"]
	// Specifies which files or directories to exclude from the compilation. `node_modules` is excluded because it contains external dependencies that don't need to be compiled.
}
